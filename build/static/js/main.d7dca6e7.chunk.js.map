{"version":3,"sources":["logo.svg","components/NewRace.jsx","components/CarsFromRace.jsx","components/Home.jsx","components/Bored.jsx","components/Cat.jsx","components/Dog.jsx","components/Genderize.jsx","components/AllRaces.jsx","facade.js","App.js","reportWebVitals.js","index.js"],"names":["NewRace","props","initialState","useState","raceName","setRaceName","raceDate","setRaceDate","raceTime","setRaceTime","raceLocation","setRaceLocation","className","align","onSubmit","event","preventDefault","requestOptions","method","headers","body","JSON","stringify","name","date","time","location","fetch","type","value","onChange","target","CarsFromRace","car","setCar","raceID","setRaceID","then","res","json","data","tempArray","all","forEach","element","newCar","brand","model","year","console","log","push","scope","map","currentCar","Home","facade","setLoggedIn","setErrorMessage","logout","loggedIn","setLoggedInUser","loggedInUser","username","password","login","setLogin","changeName","getUserRoles","onClick","Bored","activity","Cat","fact","Dog","message","Genderize","setName","gender","setGender","probability","setProbability","AllRaces","race","setRace","useEffect","newRace","currentRace","URL","handleHttpErrors","ok","Promise","reject","status","fullError","setToken","token","localStorage","setItem","getToken","getItem","payloadBase64","split","parse","window","atob","roles","makeOptions","addToken","opts","Accept","fetchData","endpoint","updateAction","SetErrorMessage","options","catch","err","e","code","user","removeItem","hasUserAccess","neededRole","includes","apiFacade","BasicExample","setActivity","setType","setFact","setMessage","exact","activeClassName","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAe,I,kBCEA,SAASA,EAAQC,GAE9B,IAAMC,EAAuB,GAAvBA,EAAiC,GAAjCA,EAA2C,GAA3CA,EAAyD,GAC/D,EAAgCC,mBAASD,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAASD,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAASD,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAwCN,mBAASD,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KA8CF,OACI,sBAAKC,UAAU,WAAWC,MAAM,SAAhC,UACE,yCAEE,uBAAMC,SA/CS,SAACC,GACpBA,EAAMC,iBAEN,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAAEC,KAAMnB,EAAUoB,KAAMlB,EAAUmB,KAAMjB,EAAUkB,SAAUhB,KAEnFiB,MAAM,+EAA+EV,IAuCnF,UACE,+CAEE,uBACA,uBACEW,KAAK,OACLL,KAAK,OACLM,MAAOzB,EACP0B,SAzCO,SAACf,GAElBV,EACIU,EAAMgB,OAAOF,UAwCT,uBATF,QAWE,uBACA,uBACED,KAAK,OACLL,KAAK,OACLM,MAAOvB,EACPwB,SA1CK,SAACf,GAEhBR,EAAYQ,EAAMgB,OAAOF,UA0CjB,uBAlBF,QAoBE,uBACA,uBACED,KAAK,OACLL,KAAK,OACLM,MAAOrB,EACPsB,SA5CK,SAACf,GAEhBN,EACIM,EAAMgB,OAAOF,UA2CT,uBA3BF,YA6BE,uBACA,uBACED,KAAK,OACLL,KAAK,OACLM,MAAOnB,EACPoB,SA9CS,SAACf,GAEpBJ,EAAgBI,EAAMgB,OAAOF,aA+CvB,uBACA,uBACA,wBAAQD,KAAK,SAAb,+BChGK,SAASI,EAAa/B,GACnC,MAAsBE,mBAAS,IAA/B,mBAAO8B,EAAP,KAAYC,EAAZ,KACA,EAA4B/B,mBAAS,IAArC,mBAAOgC,EAAP,KAAeC,EAAf,KACA,EAA0BjC,oBAAS,GAAnC,6BA+EA,OACE,sBAAKS,UAAU,WAAWC,MAAM,SAAhC,UACE,wFAEA,uBAAMC,SAjFW,SAACC,GACpBA,EAAMC,iBAENW,MAAM,qFAAD,OACkFQ,IAEpFE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAIC,EAAY,GAChBD,EAAKE,IAAIC,SAAQ,SAACC,GAChB,IAAMC,EAAS,CACbtB,KAAMqB,EAAQrB,KACduB,MAAOF,EAAQE,MACfC,MAAOH,EAAQG,MACfC,KAAMJ,EAAQI,MAEhBC,QAAQC,IAAIL,GACZJ,EAAUU,KAAKN,MAGjBX,EAAOO,OA6DT,UACE,6CAEE,uBACA,uBAAOb,KAAK,OAAOL,KAAK,MAAMM,MAAOM,EAAQL,SApCpC,SAACf,GAEhBqB,EAAUrB,EAAMgB,OAAOF,aAoCnB,uBACA,uBACA,wBAAQD,KAAK,SAAb,yBAGF,wBAAOhB,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIwC,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,uBAGJ,gCACGnB,EAAIoB,KAAI,SAACC,GAAD,OACP,+BACE,6BAAKA,EAAW/B,OAChB,6BAAK+B,EAAWR,QAChB,6BAAKQ,EAAWP,QAChB,6BAAKO,EAAWN,qB,mBChHf,SAASO,EAAT,GAQX,IAPFC,EAOC,EAPDA,OACAC,EAMC,EANDA,YACAC,EAKC,EALDA,gBACAC,EAIC,EAJDA,OACAC,EAGC,EAHDA,SAEAC,GACC,EAFDC,aAEC,EADDD,iBAEM3D,EAAe,CAAE6D,SAAU,GAAIC,SAAU,IAC/C,EAA0B7D,mBAASD,GAAnC,mBAAO+D,EAAP,KAAcC,EAAd,KAEMC,EAAa,SAACpD,GAElBmD,EAAS,2BACJD,GADG,kBAELlD,EAAMgB,OAAOR,KAAOR,EAAMgB,OAAOF,UA6CtC,OACE,sBAAKjB,UAAU,WAAWC,MAAM,SAAhC,UACE,uCACE+C,GACA,uBAAM9C,SA3BS,SAACC,GACpBA,EAAMC,iBAINwC,EAAOS,MAAMA,EAAMF,SAAUE,EAAMD,SAAUP,EAAaC,GAG1DG,EAAgBI,EAAMF,UAEtBG,EAAShE,IAiBL,UACE,+CAEE,uBACA,uBACE0B,KAAK,OACLL,KAAK,WACLM,MAAOoC,EAAMF,SACbjC,SAAUqC,IAEZ,uBATF,YAWE,uBACA,uBACEvC,KAAK,OACLL,KAAK,WACLM,MAAOoC,EAAMD,SACblC,SAAUqC,OAGd,uBACA,uBACA,wBAAQvC,KAAK,SAAb,sBAIJ,uCAAU4B,EAAOY,kBACjB,wBAAQC,QAASV,EAAjB,uBC9FN,IAUeW,EAVD,SAACrE,GACX,OACI,gCACE,wCACA,4BAAIA,EAAMsE,WACV,4BAAItE,EAAM2B,WCIL4C,EATH,SAACvE,GACT,OACI,gCACE,qCACA,4BAAIA,EAAMwE,WCKLC,EATH,SAACzE,GACT,OACI,gCACE,qCACA,4BAAIA,EAAM0E,cCyCLC,MA1Cf,SAAoB3E,GAGlB,MAAwBE,mBAAS,IAAjC,mBAAOoB,EAAP,KAAasD,EAAb,KACA,EAA4B1E,mBAAS,IAArC,mBAAO2E,EAAP,KAAeC,EAAf,KACA,EAAsC5E,mBAAS,IAA/C,mBAAO6E,EAAP,KAAoBC,EAApB,KAoBE,OACI,gCACE,2CACA,uBAAMnE,SAfO,SAACC,GACpBA,EAAMC,iBAENW,MAAM,kCAAoCJ,GACvCc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJS,QAAQC,IAAIV,GACZuC,EAAUvC,EAAKsC,QACfG,EAAezC,EAAKwC,iBAOlB,UACE,0CAEE,uBAAOpD,KAAK,OAAOL,KAAK,OAAOM,MAAON,EAAMO,SAvBrC,SAACf,GAClBkC,QAAQC,IAAInC,EAAMgB,OAAOF,OACzBgD,EAAQ9D,EAAMgB,OAAOF,aAuBb,wBAAQD,KAAK,SAAb,uBAEF,4BAAIL,IACJ,4BAAIuD,IACJ,4BAAIE,QCtCC,SAASE,EAASjF,GAC7B,MAAwBE,mBAAS,IAAjC,mBAAOgF,EAAP,KAAaC,EAAb,KAqBA,OApBAC,qBAAU,WACN1D,MAAM,8EACHU,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAIC,EAAY,GAChBD,EAAKG,SAAQ,SAACC,GACZ,IAAM0C,EAAU,CACd/D,KAAMqB,EAAQrB,KACdC,KAAMoB,EAAQpB,KACdC,KAAMmB,EAAQnB,KACdC,SAAUkB,EAAQlB,UAGpBe,EAAUU,KAAKmC,MAGjBF,EAAQ3C,QAEX,IAGD,8BACI,wBAAO7B,UAAU,QAAjB,UACI,gCACI,+BACI,oBAAIwC,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,2BAGR,gCACK+B,EAAK9B,KAAI,SAACkC,GAAD,OACV,+BACI,6BAAKA,EAAYhE,OACjB,6BAAKgE,EAAY/D,OACjB,6BAAK+D,EAAY9D,OACjB,6BAAK8D,EAAY7D,aAJZ6D,EAAYhE,eAZvB4D,GCzBlB,IAAMK,EAAM,uDAEZ,SAASC,EAAiBnD,GACxB,OAAKA,EAAIoD,GAGFpD,EAAIC,OAFFoD,QAAQC,OAAO,CAAEC,OAAQvD,EAAIuD,OAAQC,UAAWxD,EAAIC,SAK/D,IAoGeiB,EApGC,WACd,IAsCMuC,EAAW,SAACC,GAChBC,aAAaC,QAAQ,WAAYF,IAE7BG,EAAW,WACf,OAAOF,aAAaG,QAAQ,aAExBxC,EAAW,WACf,IAAMA,EAAyB,MAAduC,IACjB,OAAOvC,GAMHQ,EAAe,WAEnB,GAAa,MADC+B,IACK,CACjB,IAAME,EAAgBF,IAAWG,MAAM,KAAK,GAG5C,OAFsBjF,KAAKkF,MAAMC,OAAOC,KAAKJ,IACjBK,MAEvB,MAAO,IAQVC,EAAc,SAACzF,EAAQ0F,EAAUxF,GACrC,IAAIyF,EAAO,CACT3F,OAAQA,EACRC,QAAS,CACP,eAAgB,mBAChB2F,OAAQ,qBASZ,OANIF,GAAYhD,MACdiD,EAAK1F,QAAQ,kBAAoBgF,KAE/B/E,IACFyF,EAAKzF,KAAOC,KAAKC,UAAUF,IAEtByF,GAGT,MAAO,CACLF,cACAI,UAtFgB,SAACC,EAAUC,EAAcC,GACzC,IAAMC,EAAUR,EAAY,OAAO,GACnC,OAAOhF,MAAM6D,EAAM,QAAUwB,EAAUG,GACpC9E,KAAKoD,GACLpD,MAAK,SAACG,GAAD,OAAUyE,EAAazE,MAC5B4E,OAAM,SAACC,GACFA,EAAIxB,QACN5C,QAAQC,IAAImE,GACZA,EAAIvB,UAAUzD,MAAK,SAACiF,GAAD,OAAOJ,EAAgBI,EAAEC,KAAO,KAAOD,EAAE3C,aAE5DuC,EAAgB,qBA6EtBnB,WACAI,WACAvC,WACAK,MA3EY,SAACuD,EAAMxD,EAAUP,EAAaC,GAC1C,IAAMyD,EAAUR,EAAY,QAAQ,EAAM,CACxC5C,SAAUyD,EACVxD,SAAUA,IAEZ,OAAOrC,MAAM6D,EAAM,aAAc2B,GAC9B9E,KAAKoD,GACLpD,MAAK,SAACC,GACLyD,EAASzD,EAAI0D,OACbvC,GAAY,GACZC,EAAgB,gBAEjB0D,OAAM,SAACC,GACFA,EAAIxB,OACNwB,EAAIvB,UAAUzD,MAAK,SAACiF,GAAD,OAAO5D,EAAgB4D,EAAEC,KAAO,KAAOD,EAAE3C,YAE5DjB,EAAgB,qBA4DtBC,OA3Ca,WACbsC,aAAawB,WAAW,aA2CxBrD,eACAsD,cA/BoB,SAACC,EAAY/D,GACjC,IAAM8C,EAAQtC,IAAekC,MAAM,KACnC,OAAO1C,GAAY8C,EAAMkB,SAASD,KAiCvBE,G,cC7EA,SAASC,IACtB,MAAgC3H,mBAAS,IAAzC,mBAAOoE,EAAP,KAAiBwD,EAAjB,KACA,EAAwB5H,mBAAS,IAAjC,mBAAOyB,EAAP,KAAaoG,EAAb,KACA,EAAwB7H,mBAAS,IAAjC,mBAAOsE,EAAP,KAAawD,EAAb,KACA,EAA8B9H,mBAAS,IAAvC,mBAAOwE,EAAP,KAAgBuD,EAAhB,KAEA,EAAgC/H,oBAAS,GAAzC,mBAAOyD,EAAP,KAAiBH,EAAjB,KACA,EAAwCtD,mBAAS,IAAjD,mBAAO2D,EAAP,KAAqBD,EAArB,KACA,EAAwC1D,mBAAS,0BAAjD,mBAAqBuD,GAArB,WA6BA,OArBA2B,qBAAU,WACR1D,MAAM,yCACHU,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAWuF,EAAYvF,EAAK+B,UAAWyD,EAAQxF,EAAKZ,WAC3D,IAEHyD,qBAAU,WACR1D,MAAM,8BACHU,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUyF,EAAQzF,EAAKiC,WAC9B,IAEHY,qBAAU,WACR1D,MAAM,2CACHU,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAU0F,EAAW1F,EAAKmC,cACjC,IAMD,cAAC,IAAD,UACE,gCACE,qBAAI/D,UAAU,SAAd,UACE,6BACE,cAAC,IAAD,CAASuH,OAAK,EAACC,gBAAgB,WAAWC,GAAG,IAA7C,oBAIF,6BACE,cAAC,IAAD,CAASF,OAAK,EAACC,gBAAgB,WAAWC,GAAG,SAA7C,qBAIF,6BACE,cAAC,IAAD,CAASF,OAAK,EAACC,gBAAgB,WAAWC,GAAG,OAA7C,mBAIF,6BACE,cAAC,IAAD,CAASF,OAAK,EAACC,gBAAgB,WAAWC,GAAG,OAA7C,mBAIF,6BACE,cAAC,IAAD,CAASF,OAAK,EAACC,gBAAgB,WAAWC,GAAG,aAA7C,yBAIF,6BACE,cAAC,IAAD,CAASF,OAAK,EAACC,gBAAgB,WAAWC,GAAG,YAA7C,wBAIF,6BACE,cAAC,IAAD,CAASF,OAAK,EAACC,gBAAgB,WAAWC,GAAG,WAA7C,uBAIF,6BACE,cAAC,IAAD,CAASF,OAAK,EAACC,gBAAgB,WAAWC,GAAG,gBAA7C,+BAMJ,uBASA,qBAAKzH,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuH,OAAK,EAACG,KAAK,IAAlB,SACE,cAAC/E,EAAD,CACEI,OAtFC,WACbH,EAAOG,SACPF,GAAY,GACZC,EAAgB,gBAoFJE,SAAUA,EACVH,YAAaA,EACbD,OAAQA,EACRE,gBAAiBA,EACjBI,aAAcA,EACdD,gBAAiBA,MAGrB,cAAC,IAAD,CAAOyE,KAAK,SAAZ,SACG9E,EAAOkE,cAAc,OAAQ9D,IAC5B,cAAC,EAAD,CACEJ,OAAQA,EACRE,gBAAiBA,EACjBa,SAAUA,EACV3C,KAAMA,MAIZ,cAAC,IAAD,CAAO0G,KAAK,OAAZ,SACE,cAAC,EAAD,CAAK7D,KAAMA,MAEb,cAAC,IAAD,CAAO6D,KAAK,OAAZ,SACE,cAAC,EAAD,CAAK3D,QAASA,MAEhB,cAAC,IAAD,CAAO2D,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACG9E,EAAOkE,cAAc,OAAQ9D,IAC5B,cAACsB,EAAD,MAGJ,cAAC,IAAD,CAAOoD,KAAK,WAAZ,SACC9E,EAAOkE,cAAc,QAAS9D,IAC7B,cAAC5D,EAAD,MAGF,cAAC,IAAD,CAAOsI,KAAK,gBAAZ,SACG9E,EAAOkE,cAAc,OAAQ9D,IAC5B,cAAC5B,EAAD,gBCtKhB,IAYeuG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpG,MAAK,YAAkD,IAA/CqG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d7dca6e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function NewRace(props){\r\n\r\n  const initialState = { name: \"\", date: \"\", time: \"\", location: \"\"};\r\n  const [raceName, setRaceName] = useState(initialState.name);\r\n  const [raceDate, setRaceDate] = useState(initialState.date);\r\n  const [raceTime, setRaceTime] = useState(initialState.time);\r\n  const [raceLocation, setRaceLocation] = useState(initialState.location);\r\n \r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name: raceName, date: raceDate, time: raceTime, location: raceLocation })\r\n      };\r\n      fetch('https://www.mathias-filten-borg.dk/3.semesterEksamen/api/RaceCarInfo/newRace',requestOptions)\r\n      \r\n    \r\n    //setLogin(initialState);\r\n  };\r\n\r\n  const changeName = (event) => {\r\n    //console.log([event.target.name])\r\n    setRaceName(\r\n        event.target.value,\r\n    );\r\n\r\n};\r\n\r\nconst changeDate = (event) => {\r\n    //console.log([event.target.name])\r\n    setRaceDate(event.target.value,\r\n    );\r\n\r\n};\r\n\r\nconst changeTime = (event) => {\r\n    //console.log([event.target.name])\r\n    setRaceTime(\r\n        event.target.value,\r\n    );\r\n};\r\n\r\nconst changeLocation = (event) => {\r\n    //console.log([event.target.name])\r\n    setRaceLocation(event.target.value,\r\n    );\r\n\r\n};\r\n\r\nreturn (\r\n    <div className=\"col-xs-1\" align=\"center\">\r\n      <h2>NewRace</h2>\r\n      \r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Race Name:\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={raceName}\r\n              onChange={changeName}\r\n            />\r\n            <br />\r\n            Date:\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"date\"\r\n              value={raceDate}\r\n              onChange={changeDate}\r\n            />\r\n            <br />\r\n            Time:\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Time\"\r\n              value={raceTime}\r\n              onChange={changeTime}\r\n            />\r\n            <br />\r\n            Location:\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"date\"\r\n              value={raceLocation}\r\n              onChange={changeLocation}\r\n            />\r\n          </label>\r\n          <br />\r\n          <br />\r\n          <button type=\"submit\">Create Race</button>\r\n        </form>\r\n    </div>\r\n  )};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function CarsFromRace(props) {\r\n  const [car, setCar] = useState([]);\r\n  const [raceID, setRaceID] = useState(\"\");\r\n  const [query, setQuery] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    fetch(\r\n      `https://www.mathias-filten-borg.dk/3.semesterEksamen/api/RaceCarInfo/carsFromRace/${raceID}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let tempArray = [];\r\n        data.all.forEach((element) => {\r\n          const newCar = {\r\n            name: element.name,\r\n            brand: element.brand,\r\n            model: element.model,\r\n            year: element.year,\r\n          };\r\n          console.log(newCar);\r\n          tempArray.push(newCar);\r\n          \r\n        });\r\n        setCar(tempArray);\r\n\r\n        //setLogin(initialState);\r\n      });\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //       if(!query) return;\r\n  //     fetch(\r\n  //       `http://localhost:8080/3__semester_eksamen/api/RaceCarInfo/carsFromRace/${raceID}`\r\n  //     )\r\n  //       .then((res) => res.json())\r\n  //       .then((data) => {\r\n  //         let tempArray = [];\r\n  //         data.forEach((element) => {\r\n  //           const newCar = {\r\n  //             name: element.name,\r\n  //             brand: element.brand,\r\n  //             model: element.model,\r\n  //             year: element.year,\r\n  //           };\r\n\r\n  //           tempArray.push(newCar);\r\n  //         });\r\n  //         console.log(data);\r\n  //         setCar(tempArray);\r\n  //       });\r\n  //    }, []);\r\n\r\n  const changeID = (event) => {\r\n    //console.log([event.target.name])\r\n    setRaceID(event.target.value);\r\n  };\r\n\r\n  //   <div key={car}>\r\n  //     <table className=\"table\">\r\n  //       <thead>\r\n  //         <tr>\r\n  //           <th scope=\"col\">Name</th>\r\n  //           <th scope=\"col\">Brand</th>\r\n  //           <th scope=\"col\">Model</th>\r\n  //           <th scope=\"col\">Year</th>\r\n  //         </tr>\r\n  //       </thead>\r\n  //       <tbody>\r\n  //         {car.map((currentCar) => (\r\n  //           <tr>\r\n  //             <td>{currentCar.name}</td>\r\n  //             <td>{currentCar.brand}</td>\r\n  //             <td>{currentCar.model}</td>\r\n  //             <td>{currentCar.year}</td>\r\n  //           </tr>\r\n  //         ))}\r\n  //       </tbody>\r\n  //     </table>\r\n  //   </div>;\r\n\r\n  return (\r\n    <div className=\"col-xs-1\" align=\"center\">\r\n      <h2>See Cars Participating in race based on race ID number</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Race ID:\r\n          <br />\r\n          <input type=\"text\" name=\"rid\" value={raceID} onChange={changeID} />\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <button type=\"submit\">See Cars</button>\r\n      </form>\r\n\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Brand</th>\r\n            <th scope=\"col\">Model</th>\r\n            <th scope=\"col\">Year</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {car.map((currentCar) => (\r\n            <tr>\r\n              <td>{currentCar.name}</td>\r\n              <td>{currentCar.brand}</td>\r\n              <td>{currentCar.model}</td>\r\n              <td>{currentCar.year}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Home({\r\n  facade,\r\n  setLoggedIn,\r\n  setErrorMessage,\r\n  logout,\r\n  loggedIn,\r\n  loggedInUser,\r\n  setLoggedInUser,\r\n}) {\r\n  const initialState = { username: \"\", password: \"\" };\r\n  const [login, setLogin] = useState(initialState);\r\n\r\n  const changeName = (event) => {\r\n    //console.log([event.target.name])\r\n    setLogin({\r\n      ...login,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // function addUser() {\r\n  //   const userObject = {\r\n  //     userName: login.username,\r\n  //     userPass: login.password,\r\n  //   };\r\n  //   console.log(userObject);\r\n\r\n  //   const options = facade.makeOptions(\"POST\", true, userObject);\r\n\r\n  //   fetch(`https://jenseninc.dk/Restaurant/api/info/newUser`, options)\r\n  //     .then(facade.handleHttpErrors)\r\n  //     .then((data) => {\r\n  //       setLogin(initialState);\r\n  //       alert(\"User has been created - Now you can login!\");\r\n  //     })\r\n  //     .catch(facade.errorHandling);\r\n  // }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // console.log(login);\r\n\r\n    facade.login(login.username, login.password, setLoggedIn, setErrorMessage);\r\n    // console.log(setLoggedIn);\r\n    // console.log(setErrorMessage);\r\n    setLoggedInUser(login.username);\r\n    // console.log(loggedInUser);\r\n    setLogin(initialState);\r\n  };\r\n\r\n  // const handleClick = (event) => {\r\n  //   event.preventDefault();\r\n\r\n  //   if (login.username !== \"\") {\r\n  //     addUser();\r\n  //   } else {\r\n  //     alert(\"You need to fill in a username..\");\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"col-xs-1\" align=\"center\">\r\n      <h2>Home</h2>\r\n      {!loggedIn && (\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            User Name:\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={login.username}\r\n              onChange={changeName}\r\n            />\r\n            <br />\r\n            Password:\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"password\"\r\n              value={login.password}\r\n              onChange={changeName}\r\n            />\r\n          </label>\r\n          <br />\r\n          <br />\r\n          <button type=\"submit\">Login</button>\r\n          {/* <button onClick={handleClick}>Sign Up</button> */}\r\n        </form>\r\n      )}\r\n      <p>Role: {facade.getUserRoles()}</p>\r\n      <button onClick={logout}>Logout</button>\r\n    </div>\r\n  );\r\n}","const Bored = (props) => {\r\n    return (\r\n        <div>\r\n          <h2>Bored?</h2>\r\n          <p>{props.activity}</p>\r\n          <p>{props.type}</p>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Bored;","const Cat = (props) => {\r\n    return (\r\n        <div>\r\n          <h2>Cat</h2>\r\n          <p>{props.fact}</p>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Cat;","const Dog = (props) => {\r\n    return (\r\n        <div>\r\n          <h2>Dog</h2>\r\n          <p>{props.message}</p>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Dog;","import React, {useState, useEffect} from \"react\";\r\n\r\n\r\nfunction Genderize (props){\r\n\r\n  \r\n  const [name, setName] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [probability, setProbability] = useState(\"\");\r\n\r\n\r\n  const changeName = (event) => {\r\n    console.log(event.target.value)\r\n    setName(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    fetch(`https://api.genderize.io/?name=` + name)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        setGender(data.gender)\r\n        setProbability(data.probability)\r\n      })\r\n  }\r\n\r\n    return (\r\n        <div>\r\n          <h2>Genderize</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <label>\r\n              Name:\r\n              <input type=\"text\" name=\"name\" value={name} onChange={changeName}/>\r\n            </label>\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n          <p>{name}</p>\r\n          <p>{gender}</p>\r\n          <p>{probability}</p>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Genderize;","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function AllRaces(props) {\r\n    const [race, setRace] = useState([]);\r\n    useEffect(() => {\r\n        fetch(\"https://www.mathias-filten-borg.dk/3.semesterEksamen/api/RaceCarInfo/Races\")\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            let tempArray = [];  \r\n            data.forEach((element) => {\r\n              const newRace = {\r\n                name: element.name,\r\n                date: element.date,\r\n                time: element.time,\r\n                location: element.location,\r\n              };\r\n              let tempt = race;\r\n              tempArray.push(newRace);\r\n              \r\n            });\r\n            setRace(tempArray);\r\n          });\r\n      }, []);\r\n\r\n    return (\r\n        <div key={race}>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Time</th>\r\n                        <th scope=\"col\">Location</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {race.map((currentRace) => (\r\n                    <tr key={currentRace.name}>\r\n                        <td>{currentRace.name}</td>\r\n                        <td>{currentRace.date}</td>\r\n                        <td>{currentRace.time}</td>\r\n                        <td>{currentRace.location}</td>\r\n                    </tr>    \r\n                    ))}\r\n                </tbody>        \r\n            </table>    \r\n        </div>    \r\n    )\r\n}","const URL = \"https://www.mathias-filten-borg.dk/3.semesterEksamen\";\r\nconst URL1 = \"http://localhost:8080/3__semester_eksamen\";\r\nfunction handleHttpErrors(res) {\r\n  if (!res.ok) {\r\n    return Promise.reject({ status: res.status, fullError: res.json() });\r\n  }\r\n  return res.json();\r\n}\r\n\r\nlet apiFacade = () => {\r\n  const fetchData = (endpoint, updateAction, SetErrorMessage) => {\r\n    const options = makeOptions(\"GET\", true); //True add's the token\r\n    return fetch(URL + \"/api/\" + endpoint, options)\r\n      .then(handleHttpErrors)\r\n      .then((data) => updateAction(data))\r\n      .catch((err) => {\r\n        if (err.status) {\r\n          console.log(err);\r\n          err.fullError.then((e) => SetErrorMessage(e.code + \": \" + e.message));\r\n        } else {\r\n          SetErrorMessage(\"Network error\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const login = (user, password, setLoggedIn, setErrorMessage) => {\r\n    const options = makeOptions(\"POST\", true, {\r\n      username: user,\r\n      password: password,\r\n    });\r\n    return fetch(URL + \"/api/login\", options)\r\n      .then(handleHttpErrors)\r\n      .then((res) => {\r\n        setToken(res.token);\r\n        setLoggedIn(true);\r\n        setErrorMessage(\"Logged in\");\r\n      })\r\n      .catch((err) => {\r\n        if (err.status) {\r\n          err.fullError.then((e) => setErrorMessage(e.code + \": \" + e.message));\r\n        } else {\r\n          setErrorMessage(\"Network error\");\r\n        }\r\n      });\r\n  };\r\n\r\n  // Security funktionalitet\r\n\r\n  const setToken = (token) => {\r\n    localStorage.setItem(\"jwtToken\", token);\r\n  };\r\n  const getToken = () => {\r\n    return localStorage.getItem(\"jwtToken\");\r\n  };\r\n  const loggedIn = () => {\r\n    const loggedIn = getToken() != null;\r\n    return loggedIn;\r\n  };\r\n  const logout = () => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  };\r\n\r\n  const getUserRoles = () => {\r\n    const token = getToken();\r\n    if (token != null) {\r\n      const payloadBase64 = getToken().split(\".\")[1];\r\n      const decodedClaims = JSON.parse(window.atob(payloadBase64));\r\n      const roles = decodedClaims.roles;\r\n      return roles;\r\n    } else return \"\";\r\n  };\r\n\r\n  const hasUserAccess = (neededRole, loggedIn) => {\r\n    const roles = getUserRoles().split(\",\");\r\n    return loggedIn && roles.includes(neededRole);\r\n  };\r\n\r\n  const makeOptions = (method, addToken, body) => {\r\n    var opts = {\r\n      method: method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    if (addToken && loggedIn()) {\r\n      opts.headers[\"x-access-token\"] = getToken();\r\n    }\r\n    if (body) {\r\n      opts.body = JSON.stringify(body);\r\n    }\r\n    return opts;\r\n  };\r\n\r\n  return {\r\n    makeOptions,\r\n    fetchData,\r\n    setToken,\r\n    getToken,\r\n    loggedIn,\r\n    login,\r\n    logout,\r\n    getUserRoles,\r\n    hasUserAccess,\r\n  };\r\n};\r\n\r\nconst facade = apiFacade();\r\n\r\nexport default facade;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport \"./style2.css\";\r\nimport NewRace from \"./components/NewRace\";\r\nimport CarsFromRace from \"./components/CarsFromRace\";\r\nimport Home from \"./components/Home\";\r\nimport Bored from \"./components/Bored\";\r\nimport Cat from \"./components/Cat\";\r\nimport Dog from \"./components/Dog\";\r\nimport Genderize from \"./components/Genderize\";\r\nimport AllRaces from \"./components/AllRaces\";\r\nimport facade from \"./facade\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\n\r\n// This site has 3 pages, all of which are rendered\r\n// dynamically in the browser (not server rendered).\r\n//\r\n// Although the page does not ever refresh, notice how\r\n// React Router keeps the URL up to date as you navigate\r\n// through the site. This preserves the browser history,\r\n// making sure things like the back button and bookmarks\r\n// work properly.\r\n\r\nexport default function BasicExample() {\r\n  const [activity, setActivity] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [fact, setFact] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  \r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [loggedInUser, setLoggedInUser] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"All is good ... so far\");\r\n\r\n  const logout = () => {\r\n    facade.logout();\r\n    setLoggedIn(false);\r\n    setErrorMessage(\"Logged out.\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://www.boredapi.com/api/activity\")\r\n      .then((res) => res.json())\r\n      .then((data) => (setActivity(data.activity), setType(data.type)));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://catfact.ninja/fact\")\r\n      .then((res) => res.json())\r\n      .then((data) => setFact(data.fact));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://dog.ceo/api/breeds/image/random\")\r\n      .then((res) => res.json())\r\n      .then((data) => setMessage(data.message));\r\n  }, []);\r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <ul className=\"header\">\r\n          <li>\r\n            <NavLink exact activeClassName=\"selected\" to=\"/\">\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact activeClassName=\"selected\" to=\"/bored\">\r\n              Bored\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact activeClassName=\"selected\" to=\"/cat\">\r\n              Cat\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact activeClassName=\"selected\" to=\"/dog\">\r\n              Dog\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact activeClassName=\"selected\" to=\"/genderize\">\r\n              Genderize\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact activeClassName=\"selected\" to=\"/AllRaces\">\r\n              AllRaces\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact activeClassName=\"selected\" to=\"/NewRace\">\r\n              NewRace\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact activeClassName=\"selected\" to=\"/CarsFromRace\">\r\n              CarsFromRace\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n        <hr />\r\n\r\n        {/*\r\n          A <Switch> looks through all its children <Route>\r\n          elements and renders the first one whose path\r\n          matches the current URL. Use a <Switch> any time\r\n          you have multiple routes, but you want only one\r\n          of them to render at a time\r\n        */}\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home\r\n                logout={logout}\r\n                loggedIn={loggedIn}\r\n                setLoggedIn={setLoggedIn}\r\n                facade={facade}\r\n                setErrorMessage={setErrorMessage}\r\n                loggedInUser={loggedInUser}\r\n                setLoggedInUser={setLoggedInUser}\r\n              />\r\n            </Route>\r\n            <Route path=\"/bored\">\r\n              {facade.hasUserAccess(\"user\", loggedIn) && (\r\n                <Bored\r\n                  facade={facade}\r\n                  setErrorMessage={setErrorMessage}\r\n                  activity={activity}\r\n                  type={type}\r\n                />\r\n              )}\r\n            </Route>\r\n            <Route path=\"/cat\">\r\n              <Cat fact={fact} />\r\n            </Route>\r\n            <Route path=\"/dog\">\r\n              <Dog message={message} />\r\n            </Route>\r\n            <Route path=\"/genderize\">\r\n              <Genderize />\r\n            </Route>\r\n            <Route path=\"/AllRaces\">\r\n              {facade.hasUserAccess(\"user\", loggedIn) && (\r\n                <AllRaces/>\r\n              )}\r\n            </Route>\r\n            <Route path=\"/NewRace\">\r\n            {facade.hasUserAccess(\"admin\", loggedIn) && (\r\n              <NewRace/> \r\n            )}\r\n            </Route>\r\n            <Route path=\"/CarsFromRace\">\r\n              {facade.hasUserAccess(\"user\", loggedIn) && (\r\n                <CarsFromRace/>\r\n              )}\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}